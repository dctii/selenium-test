name: Allure workflow to GitHub Pages
on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Allure
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          tar -zxvf allure-2.23.1.tgz
          sudo mv allure-2.23.1 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Check if Allure is installed
        run: allure --version

      - name: Install dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip3 install --upgrade pip setuptools wheel
          pip3 install -r requirements.txt

      - name: Run simple BDD test
        run: |
          source .venv/bin/activate
          behave \
            --verbose \
            --tags=@simple \
            --format=allure_behave.formatter:AllureFormatter \
            --summary \
            --outfile allure-results \
            --include simple

      - name: Generate and server allure report
        run: |
          source .venv/bin/activate \
          && echo $(pwd) \
          && PROJECT_DIR="$(echo $(pwd))" \
          && TEST_RESULTS_DIR="./allure-results" \
          && OUTPUT_REPORT_DIR="./allure-report" \
          && ALLURE_PORT="8080" \
          && allure generate $TEST_RESULTS_DIR \
            -o $OUTPUT_REPORT_DIR \
            --clean \
          && nohup python3 -m http.server 8080 &

      - name: Unset variables
        run: unset TEST_RESULTS_DIR OUTPUT_REPORT_DIR

      - name: GET localhost:8080
        run: curl --location --globoff '[::]:8080'

      - name: Kill allure server
        run: |
          ps aux | grep 'http.server' \
          && kill -9 $(ps aux | grep 'http.server $ALLURE_PORT' | awk '{print $2}')

        

  finished:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Announce successful completion
        run: echo "Completed successfully!"